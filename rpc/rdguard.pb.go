// Code generated by protoc-gen-go. DO NOT EDIT.
// source: rdguard.proto

/*
Package rdproto is a generated protocol buffer package.

It is generated from these files:
	rdguard.proto

It has these top-level messages:
	HelloRequest
	HelloReply
	FuryRequest
	FuryReply
*/
package rdproto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type HelloRequest struct {
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (m *HelloRequest) Reset()                    { *m = HelloRequest{} }
func (m *HelloRequest) String() string            { return proto.CompactTextString(m) }
func (*HelloRequest) ProtoMessage()               {}
func (*HelloRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *HelloRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type HelloReply struct {
	Message string `protobuf:"bytes,1,opt,name=message" json:"message,omitempty"`
}

func (m *HelloReply) Reset()                    { *m = HelloReply{} }
func (m *HelloReply) String() string            { return proto.CompactTextString(m) }
func (*HelloReply) ProtoMessage()               {}
func (*HelloReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *HelloReply) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type FuryRequest struct {
	Method int32  `protobuf:"varint,1,opt,name=method" json:"method,omitempty"`
	Param  string `protobuf:"bytes,2,opt,name=param" json:"param,omitempty"`
}

func (m *FuryRequest) Reset()                    { *m = FuryRequest{} }
func (m *FuryRequest) String() string            { return proto.CompactTextString(m) }
func (*FuryRequest) ProtoMessage()               {}
func (*FuryRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *FuryRequest) GetMethod() int32 {
	if m != nil {
		return m.Method
	}
	return 0
}

func (m *FuryRequest) GetParam() string {
	if m != nil {
		return m.Param
	}
	return ""
}

type FuryReply struct {
	Result    string `protobuf:"bytes,1,opt,name=result" json:"result,omitempty"`
	ErrorCode int32  `protobuf:"varint,2,opt,name=error_code,json=errorCode" json:"error_code,omitempty"`
	ErrorMsg  string `protobuf:"bytes,3,opt,name=error_msg,json=errorMsg" json:"error_msg,omitempty"`
}

func (m *FuryReply) Reset()                    { *m = FuryReply{} }
func (m *FuryReply) String() string            { return proto.CompactTextString(m) }
func (*FuryReply) ProtoMessage()               {}
func (*FuryReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *FuryReply) GetResult() string {
	if m != nil {
		return m.Result
	}
	return ""
}

func (m *FuryReply) GetErrorCode() int32 {
	if m != nil {
		return m.ErrorCode
	}
	return 0
}

func (m *FuryReply) GetErrorMsg() string {
	if m != nil {
		return m.ErrorMsg
	}
	return ""
}

func init() {
	proto.RegisterType((*HelloRequest)(nil), "rdproto.HelloRequest")
	proto.RegisterType((*HelloReply)(nil), "rdproto.HelloReply")
	proto.RegisterType((*FuryRequest)(nil), "rdproto.FuryRequest")
	proto.RegisterType((*FuryReply)(nil), "rdproto.FuryReply")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Guarder service

type GuarderClient interface {
	SayHello(ctx context.Context, in *HelloRequest, opts ...grpc.CallOption) (*HelloReply, error)
	Fury(ctx context.Context, in *FuryRequest, opts ...grpc.CallOption) (*FuryReply, error)
}

type guarderClient struct {
	cc *grpc.ClientConn
}

func NewGuarderClient(cc *grpc.ClientConn) GuarderClient {
	return &guarderClient{cc}
}

func (c *guarderClient) SayHello(ctx context.Context, in *HelloRequest, opts ...grpc.CallOption) (*HelloReply, error) {
	out := new(HelloReply)
	err := grpc.Invoke(ctx, "/rdproto.Guarder/SayHello", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *guarderClient) Fury(ctx context.Context, in *FuryRequest, opts ...grpc.CallOption) (*FuryReply, error) {
	out := new(FuryReply)
	err := grpc.Invoke(ctx, "/rdproto.Guarder/Fury", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Guarder service

type GuarderServer interface {
	SayHello(context.Context, *HelloRequest) (*HelloReply, error)
	Fury(context.Context, *FuryRequest) (*FuryReply, error)
}

func RegisterGuarderServer(s *grpc.Server, srv GuarderServer) {
	s.RegisterService(&_Guarder_serviceDesc, srv)
}

func _Guarder_SayHello_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HelloRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GuarderServer).SayHello(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rdproto.Guarder/SayHello",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GuarderServer).SayHello(ctx, req.(*HelloRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Guarder_Fury_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FuryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GuarderServer).Fury(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rdproto.Guarder/Fury",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GuarderServer).Fury(ctx, req.(*FuryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Guarder_serviceDesc = grpc.ServiceDesc{
	ServiceName: "rdproto.Guarder",
	HandlerType: (*GuarderServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SayHello",
			Handler:    _Guarder_SayHello_Handler,
		},
		{
			MethodName: "Fury",
			Handler:    _Guarder_Fury_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "rdguard.proto",
}

func init() { proto.RegisterFile("rdguard.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 287 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x90, 0xcf, 0x4b, 0xfb, 0x40,
	0x10, 0xc5, 0xbf, 0xfd, 0xda, 0x9f, 0xa3, 0x22, 0x8c, 0xb5, 0x84, 0x16, 0x41, 0x72, 0x10, 0x4f,
	0x41, 0xea, 0x45, 0xf0, 0x56, 0x41, 0xbd, 0x08, 0x25, 0x1e, 0x3c, 0x96, 0xb5, 0x3b, 0xa4, 0xc2,
	0xae, 0xbb, 0xce, 0x26, 0xd4, 0xfc, 0xf7, 0xb2, 0xd3, 0x44, 0x4a, 0x6f, 0xf3, 0xde, 0xce, 0x67,
	0x66, 0xe7, 0xc1, 0x29, 0xeb, 0xa2, 0x52, 0xac, 0x33, 0xcf, 0xae, 0x74, 0x38, 0x60, 0x2d, 0x45,
	0x9a, 0xc2, 0xc9, 0x0b, 0x19, 0xe3, 0x72, 0xfa, 0xae, 0x28, 0x94, 0x88, 0xd0, 0xfd, 0x52, 0x96,
	0x92, 0xce, 0x55, 0xe7, 0x66, 0x94, 0x4b, 0x9d, 0x5e, 0x03, 0x34, 0x3d, 0xde, 0xd4, 0x98, 0xc0,
	0xc0, 0x52, 0x08, 0xaa, 0x68, 0x9b, 0x5a, 0x99, 0x3e, 0xc0, 0xf1, 0x53, 0xc5, 0x75, 0x3b, 0x6a,
	0x02, 0x7d, 0x4b, 0xe5, 0xc6, 0x69, 0xe9, 0xeb, 0xe5, 0x8d, 0xc2, 0x31, 0xf4, 0xbc, 0x62, 0x65,
	0x93, 0xff, 0x82, 0xef, 0x44, 0xba, 0x82, 0xd1, 0x0e, 0x8e, 0x3b, 0x26, 0xd0, 0x67, 0x0a, 0x95,
	0x29, 0x9b, 0x15, 0x8d, 0xc2, 0x4b, 0x00, 0x62, 0x76, 0xbc, 0x5a, 0x3b, 0x4d, 0xc2, 0xf7, 0xf2,
	0x91, 0x38, 0x8f, 0x4e, 0x13, 0xce, 0x60, 0x27, 0x56, 0x36, 0x14, 0xc9, 0x91, 0x90, 0x43, 0x31,
	0x5e, 0x43, 0x31, 0xdf, 0xc2, 0xe0, 0x39, 0x26, 0x40, 0x8c, 0xf7, 0x30, 0x7c, 0x53, 0xb5, 0xdc,
	0x84, 0x17, 0x59, 0x13, 0x45, 0xb6, 0x9f, 0xc3, 0xf4, 0xfc, 0xd0, 0xf6, 0xa6, 0x4e, 0xff, 0xe1,
	0x1c, 0xba, 0xf1, 0x97, 0x38, 0xfe, 0x7b, 0xde, 0xbb, 0x78, 0x8a, 0x07, 0xae, 0x30, 0x8b, 0x5b,
	0x98, 0x7d, 0xba, 0xac, 0x60, 0xbf, 0xce, 0xe8, 0x47, 0x59, 0x6f, 0x28, 0x64, 0x9b, 0x38, 0x74,
	0xeb, 0xd8, 0xe8, 0xc5, 0x99, 0x2c, 0x78, 0x8f, 0xf5, 0x32, 0xb2, 0xcb, 0xce, 0x47, 0x5f, 0x86,
	0xdc, 0xfd, 0x06, 0x00, 0x00, 0xff, 0xff, 0x43, 0xd7, 0x94, 0xe9, 0xb5, 0x01, 0x00, 0x00,
}
